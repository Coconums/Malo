<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>selectarrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initial Items

if (instance_exists(selector2))
{
    TweenFire(id,view_xview__,EaseOutExpo,0,true,0.0,1.0,320,0);
}
else TweenFire(id,y__,EaseOutExpo,TWEEN_MODE_ONCE,true,0.0,1.0,y + 240,y);

if (!audio_is_playing(mus_menu) and room = menu)
{
    audio_stop_all();
    global.mus = audio_play_sound(mus_menu,1,true);
    audio_sound_gain(global.mus,1,0);
}
else audio_sound_gain(global.mus,0.5,0);

menuopt1[0] = "Test Room";
menuopt1[1] = "Options";
menuopt1[2] = "Quit";

space1 = 16;
menu1_pos = global.lastpos1;
timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Entry Check

if (!instance_exists(selector2))
    if (view_xview != 320)
    {
        menu1_up = keyboard_check_pressed(vk_up) or gamepad_button_check_pressed(0,gp_padu);
        menu1_down = keyboard_check_pressed(vk_down) or gamepad_button_check_pressed(0,gp_padd);
        menu1_select = keyboard_check_pressed(vk_enter) or gamepad_button_check_pressed(0,gp_face1);
        
        var move = 0;
        move -= max(menu1_up,0);
        move += max(menu1_down,0);
        
        if (move != 0)
        {
            menu1_pos += move;
            if (menu1_pos &lt; 0)
            {
                audio_play_sound(snd_menu_deny,0,false);
                menu1_pos = 0;
            }
            else if (menu1_pos &gt; array_length_1d(menuopt1) - 1)
            {
                audio_play_sound(snd_menu_deny,0,false);
                menu1_pos = array_length_1d(menuopt1) - 1;
            }
            else audio_play_sound(snd_menu_move,0,false);
        }
        
        var push;
        push = max(menu1_select,0);
        
        if (menu1_pos == 0 and timer == 1) room_goto(debug);
        if (menu1_pos == (array_length_1d(menuopt1) - 1) and timer == 1) game_end();
        
        if (push == 1)
        {
            global.lastpos1 = menu1_pos;
            scr_menu1();
        }
    }

if (instance_exists(selector2))
{
    if (view_xview = 320) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Items

draw_set_halign(fa_center);
draw_set_valign(fa_bottom);
draw_set_font(fnt_title);
draw_set_color(c_white);

draw_text(160,y - 40,string("Malo Prototype"));

var m;
for (m = 0; m &lt; array_length_1d(menuopt1); m += 1)
{
    draw_text(160,(y + (m * space1)) + 20,string(menuopt1[m]));
}

draw_sprite(sprite_index,0,x + 16,(y + (menu1_pos - 1) * space1) + 20);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
