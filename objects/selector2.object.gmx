<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>selectarrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initial Items

if (instance_exists(selector1))
{
    TweenFire(id,view_xview__,EaseOutExpo,0,true,0.0,1.0,0,320);
}

menuopt2[0] = "Audio";
menuopt2[1] = "Video";
menuopt2[2] = "Back";

space2 = 16;
menu2_pos = 0;
timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Entry Check

if (!instance_exists(selector1))
    if (view_xview != 0)
    {
        menu2_up = keyboard_check_pressed(vk_up) or gamepad_button_check_pressed(0,gp_padu);
        menu2_down = keyboard_check_pressed(vk_down) or gamepad_button_check_pressed(0,gp_padd);
        menu2_select = keyboard_check_pressed(vk_enter) or gamepad_button_check_pressed(0,gp_face1);
        
        var move = 0;
        move -= max(menu2_up,0);
        move += max(menu2_down,0);
        
        if (move != 0)
        {
            if (!instance_exists(obj_volume) and !instance_exists(obj_screen))
            {
                
                menu2_pos += move;
                if (menu2_pos &lt; 0)
                {
                    audio_play_sound(snd_menu_deny,0,false);
                    menu2_pos = 0;
                }
                else if (menu2_pos &gt; array_length_1d(menuopt2) - 1)
                {
                    audio_play_sound(snd_menu_deny,0,false);
                    menu2_pos = array_length_1d(menuopt2) - 1;
                }
                else audio_play_sound(snd_menu_move,0,false);
            }
        }
        
        var push;
        push = max(menu2_select,0);
        
        if (push == 1)
        {
            scr_menu2();
        }
    }

if (instance_exists(selector1))
{
    if (view_xview = 0)
    {
        if (menu2_pos == array_length_1d(menuopt2) - 1) menu2_pos = 0;
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///On Select (Failed)

/*
This doesn't work. I hoped it would so I wouldn't have to use an external script,
but unfortunately it just completely blows off this code. Switches don't seem to work,
but I will try with if-then if needed (which, honestly, the external script is fine).
*/

/*
if (push == 1)
{
    switch (menu2_pos)
    {
        case 0:
        {
            audio_play_sound(snd_menu_deny,0,false);
            break;
        }
        case 1:
        {
            audio_play_sound(snd_menu_deny,0,false);
            break;
        }
        case 2:
        {
            audio_play_sound(snd_menu_back,0,false);
            instance_activate_object(selector1);
            TweenFire(selector1,view_xview__,EaseOutExpo,0,true,0.0,1.0,320,0);
            instance_deactivate_object(selector2);
            break;
        }
    }
    if (menu2_pos == array_length_1d(menuopt2) - 1) menu2_pos = 0;
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Items

draw_set_halign(fa_center);
draw_set_valign(fa_bottom);
draw_set_font(fnt_title);
draw_set_color(c_white);

draw_text(480,y - 40,string("Options"));

var m;
for (m = 0; m &lt; array_length_1d(menuopt2); m += 1)
{
    draw_text(480,(y + (m * space2)) + 20,string(menuopt2[m]));
}

draw_sprite(sprite_index,0,x + 16,(y + (menu2_pos - 1) * space2) + 20);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
